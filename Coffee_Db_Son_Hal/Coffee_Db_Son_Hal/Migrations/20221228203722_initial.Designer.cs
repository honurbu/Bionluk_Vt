// <auto-generated />
using System;
using Coffee_Db_Son_Hal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coffee_Db_Son_Hal.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221228203722_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Mahalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Garson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagazaId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MagazaId");

                    b.ToTable("Garsons");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Magaza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Magazalar");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Odeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Bahsis")
                        .HasColumnType("real");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<float>("ToplamTutar")
                        .HasColumnType("real");

                    b.Property<int>("VeznedarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VeznedarId");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GarsonId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GarsonId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UrunAciklamasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunFiyati")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunIcerigi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Veznedar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<int>("MagazaId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MagazaId");

                    b.ToTable("Veznedarlar");
                });

            modelBuilder.Entity("SiparisUrun", b =>
                {
                    b.Property<int>("SiparislerId")
                        .HasColumnType("int");

                    b.Property<int>("UrunlerId")
                        .HasColumnType("int");

                    b.HasKey("SiparislerId", "UrunlerId");

                    b.HasIndex("UrunlerId");

                    b.ToTable("SiparisUrun");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Garson", b =>
                {
                    b.HasOne("Coffee_Db_Son_Hal.Entities.Magaza", "Magaza")
                        .WithMany("Garsonlar")
                        .HasForeignKey("MagazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Magaza");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Odeme", b =>
                {
                    b.HasOne("Coffee_Db_Son_Hal.Entities.Veznedar", "Veznedar")
                        .WithMany("Odemeler")
                        .HasForeignKey("VeznedarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veznedar");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Siparis", b =>
                {
                    b.HasOne("Coffee_Db_Son_Hal.Entities.Garson", "Garson")
                        .WithMany("Siparisler")
                        .HasForeignKey("GarsonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coffee_Db_Son_Hal.Entities.Musteri", "Musteri")
                        .WithMany("Siparisler")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garson");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Veznedar", b =>
                {
                    b.HasOne("Coffee_Db_Son_Hal.Entities.Magaza", "Magaza")
                        .WithMany("Veznedarlar")
                        .HasForeignKey("MagazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Magaza");
                });

            modelBuilder.Entity("SiparisUrun", b =>
                {
                    b.HasOne("Coffee_Db_Son_Hal.Entities.Siparis", null)
                        .WithMany()
                        .HasForeignKey("SiparislerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coffee_Db_Son_Hal.Entities.Urun", null)
                        .WithMany()
                        .HasForeignKey("UrunlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Garson", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Magaza", b =>
                {
                    b.Navigation("Garsonlar");

                    b.Navigation("Veznedarlar");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Musteri", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("Coffee_Db_Son_Hal.Entities.Veznedar", b =>
                {
                    b.Navigation("Odemeler");
                });
#pragma warning restore 612, 618
        }
    }
}
